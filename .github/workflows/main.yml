name: Students-API-testing

on:
  push:
    branches:
      - main

env:
  REGISTRY: appknight/students-api
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:
      
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: flake8 Lint
        uses: py-actions/flake8@v2
  
  build_and_push:
    runs-on: ubuntu-latest
    name: Build and push docker image
    needs: lint
    outputs:
      commit_hash: ${{ steps.commit_hash.outputs.commit_hash }}
    steps:
      
      - name: Git checkout
        uses: actions/checkout@v3

      - id: commit_hash
        run: echo "::set-output name=commit_hash::${GITHUB_SHA::7}"

      - name: Login Docker Hub
        uses: docker/login-action@v2
        with:   
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}:${{ steps.commit_hash.outputs.commit_hash }}
  
  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    needs: build_and_push
    env:
      HOST_1: 18.196.120.95
      HOST_2: 3.68.192.183
      USERNAME: ubuntu
    steps:
      - name:  Deploy to 2 EC2 instances via SSH action
        uses: JimCronqvist/action-ssh@master
        with:
          hosts: '$ubuntu@{{ env.HOST_1 }} ubuntu@${{ env.HOST_2 }}'
          privateKey: ${{ secrets.PRIVATE_KEY }}
          command: |
            rm -r flask-api-workshop 
            git clone https://github.com/app-knight/flask-api-workshop.git
            cp .env ./flask-api-workshop/.env
            cd flask-api-workshop
            TAG=${{ needs.build_and_push.outputs.commit_hash }} docker compose up -d --force-recreate


  check_status:
    runs-on: ubuntu-latest
    name: Check API status
    needs: deploy
    env:
      HOST_1: http://18.196.120.95/api
      HOST_2: http://3.68.192.183/api
    steps:
    - name: Check the deployed service URL
      uses: jtalk/url-health-check-action@v2
      with:
        url: ${{ env.HOST_1 }}|${{ env.HOST_2 }}
        max-attempts: 5
        retry-delay: 5s